/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import com.formdev.flatlaf.intellijthemes.FlatArcOrangeIJTheme;
import Dao.DaoPost;
import Dao.DaoArea;
import Modelo.post;
import Dao.DaoEmployee;
import Modelo.area;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author oscar
 */
public class infoVistaCargo extends javax.swing.JFrame {
        
    DaoPost cargo=new DaoPost();
    private Menu menu;

    private infoVistaCargo() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    public Menu getMenu() {
        return menu;
    }

    public void setMenu(Menu menu) {
        this.menu = menu;
    }
    
    public infoVistaCargo(Menu menu,String nro_registro) throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);//esto hace que la ventana se situe en el centro de la pantalla
        cargo.ListarCargo();
        this.menu = menu;
        DaoPost dao=new DaoPost(); 
        post cargoDatos=dao.consultarCargo(nro_registro);
        txtId.setText(String.valueOf(cargoDatos.getId()));//se carga con el id pero no se ve
        txtId.setVisible(false);
        txtCargo.setText(String.valueOf(cargoDatos.getName()));
        int idArea =cargoDatos.getArea();
        char state = cargoDatos.getState();
        String stateString = String.valueOf(state);
        
        //ya que la funcion esta en empleados se reutiliza
        DaoEmployee daoE=new DaoEmployee();
        List<area> areas = daoE.obtenerAreas();
        for (area areaObj : areas) {
        String areaName =(areaObj.getName());//se almacena en una variable para evitar Dise�o
        cmbAreaCargo.addItem(areaName);
        System.out.println("Nombre agregado: " + areaName);
        }
        
        //se debe identificar el texto a asignar por el codigo que esta en idArea
        DaoArea daoA=new DaoArea();
        String idAreaString = daoA.nombreArea(idArea);
        cmbAreaCargo.setSelectedItem(idAreaString);
        
        //esto es para obtener el estado
        String stateName;
        if("A".equals(stateString)){
            stateName="Activo";
        }else {
            stateName="Inactivo";
        }
        cmbStateCargo.setSelectedItem(stateName);
        
    }

    infoVistaCargo(Menu menu) {
        initComponents();
        this.setLocationRelativeTo(null);//esto hace que la ventana se situe en el centro de la pantalla
        cargo.ListarCargo();
        this.menu = menu;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCargo = new javax.swing.JTextField();
        lblCargo = new javax.swing.JLabel();
        cmbStateCargo = new javax.swing.JComboBox<>();
        lblArea1 = new javax.swing.JLabel();
        btnAceptarCargo = new javax.swing.JButton();
        lblCargoArea = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        cmbAreaCargo = new javax.swing.JComboBox<>();

        txtCargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCargoKeyTyped(evt);
            }
        });

        lblCargo.setText("Cargo");

        cmbStateCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));

        lblArea1.setText("Estado");

        btnAceptarCargo.setText("Aceptar");
        btnAceptarCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarCargoActionPerformed(evt);
            }
        });

        lblCargoArea.setText("Area");

        txtId.setEditable(false);
        txtId.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbStateCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(btnAceptarCargo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCargoArea, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbAreaCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCargo)))
                    .addComponent(txtId))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCargo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCargoArea)
                    .addComponent(cmbAreaCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbStateCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArea1)
                    .addComponent(btnAceptarCargo))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarCargoActionPerformed
        DaoPost DCargo = new DaoPost();
        String idtext=txtId.getText();
        int id;
        
            try {
                id = Integer.parseInt(idtext);
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "ID no es un número válido.");
                    return; // Salir del método si el ID no es válido
                    }
        String name= txtCargo.getText();
        String areaName = (String) cmbAreaCargo.getSelectedItem();
        if (areaName == null || areaName.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione un área válida.");
            return; // Salir del método si no hay un área seleccionada
}   
        //se obtiene el id por el nombre en el combo box area//
        DaoArea daoA=new DaoArea();
        int idArea = 0;
        try {
            idArea = daoA.retornaAreaId(areaName);
        } catch (SQLException ex) {
            Logger.getLogger(infoVistaCargo.class.getName()).log(Level.SEVERE, null, ex);
        }
        char state;
            // Comparar cadenas correctamente
                if ("Activo".equals(cmbStateCargo.getSelectedItem().toString())) {
                        state = 'A';
                } else {
                        state = 'I';
                }
                       
    // Verificar que el nombre no esté vacío y que no haya un registro con el mismo nombre
                if (name != null && !name.trim().isEmpty()) {
                     try {
                                boolean existe = DCargo.nombreExiste(name,id);
                            if (existe) {
                                JOptionPane.showMessageDialog(null, "Ya existe un registro con nombre "+name);
                            } else {
                                DCargo.actualizar(id, name,idArea, state);
                                this.getMenu().ListarCargo();// Asumiendo que esto actualiza la lista de áreas
                                dispose();}
                            
                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(null, "Error al verificar el registro: " + e.getMessage());
                                    e.printStackTrace(); // Para depuración
                            }
                } else {
                        JOptionPane.showMessageDialog(null, "Registro vacío");
                }
    }//GEN-LAST:event_btnAceptarCargoActionPerformed

    private void txtCargoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCargoKeyTyped
            char c = evt.getKeyChar();
            if (!Character.isLetter(c) && c != ' ') {
                evt.consume(); // Consume el evento si el carácter no es una letra ni un espacio
                }        // TODO add your handling code here:
    }//GEN-LAST:event_txtCargoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(infoVistaCargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(infoVistaCargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(infoVistaCargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(infoVistaCargo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new infoVistaCargo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarCargo;
    private javax.swing.JComboBox<String> cmbAreaCargo;
    private javax.swing.JComboBox<String> cmbStateCargo;
    private javax.swing.JLabel lblArea1;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblCargoArea;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
